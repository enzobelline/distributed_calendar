[{"state":{"code":"classDiagram\n    class Middleware {\n        +add_event(title: String, description: String, start_time: Date, end_time: Date, guests: List, creator: String): UUID\n        +update_event(event_id: UUID, title: String, description: String, start_time: Date, end_time: Date, guests: List, comments: List): UUID\n        +update_gossip(event_id: UUID, membership_list: Map, last_heartbeat: Map, event_reputations: Map): UUID\n        +get_event(event_id: UUID): Event\n        +sendGossip(node: Node, peer: String): void\n        +receiveGossip(gossipData: Map): void\n        +mergeMembershipLists(node: Node, peerNode: Node): void\n        +updateHeartbeat(node: Node): void\n        +detectFailures(node: Node): void\n    }\n    class Node {\n        +event_id: UUID\n        +membership_list: Map\n        +last_heartbeat: Map\n        +event_reputations: Map\n        +gossip_interval: int\n        +heartbeat_interval: int\n    }\n    class GossipThread {\n        +gossip(node: Node): void\n        +monitorHeartbeats(node: Node): void\n        +sendHeartbeat(node: Node): void\n        +aggregateReputationScores(node: Node): void\n    }\n\n    Middleware --> Node : manages\n    Middleware --> GossipThread : uses\n    GossipThread --> Node : interacts\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":131.4494905058319,"y":125.21936368618596},"zoom":0.7458882331848145,"editorMode":"code"},"time":1717827593551,"type":"auto","id":"6f92dfe0-1729-4d2a-87fe-e2459a98ba13","name":"abundant-bit"},{"state":{"code":"sequenceDiagram\n    participant Client\n    participant Middleware\n    participant EventDatabase\n\n    Client->>Middleware: createEvent()\n    activate Middleware\n    Middleware->>Middleware: assignTimestamp()\n    Middleware->>EventDatabase: insertEvent()\n    EventDatabase->>Middleware: confirmInsert()\n    Middleware->>Client: confirmEvent()\n    deactivate Middleware\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":131.4494905058319,"y":125.21936368618596},"zoom":0.7458882331848145,"editorMode":"code"},"time":1717826994506,"type":"auto","id":"9619a33e-807d-4a9c-bec2-f1b5063aeee0","name":"happy-man"},{"state":{"code":"sequenceDiagram\n    participant Client\n    participant Middleware\n    participant TimestampManager\n    participant EventDatabase\n\n    Client->>Middleware: createEvent()\n    Middleware->>TimestampManager: assignTimestamp()\n    TimestampManager->>Middleware: returnTimestamp()\n    Middleware->>EventDatabase: insertEvent()\n    EventDatabase->>Middleware: confirmInsert()\n    Middleware->>Client: confirmEvent()\n\n    Client->>Middleware: updateEvent()\n    Middleware->>EventDatabase: fetchDependencies()\n    EventDatabase->>Middleware: returnDependencies()\n    Middleware->>Middleware: resolveDependencies()\n    Middleware->>EventDatabase: updateEvent()\n    EventDatabase->>Middleware: confirmUpdate()\n    Middleware->>Client: confirmUpdate()\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":131.4494905058319,"y":125.21936368618596},"zoom":0.7458882331848145,"editorMode":"code"},"time":1717826933547,"type":"auto","id":"dbc9e7d5-2893-4d11-84b7-876c8ea07f3a","name":"hundreds-bird"},{"state":{"code":"classDiagram\n    class Middleware {\n        +createEvent(eventData): EventID\n        +updateEvent(eventID, data): bool\n        +resolveDependencies(event): bool\n        +checkEventResolved(event): bool\n    }\n    class TimestampManager {\n        +assignTimestamp(event): int\n        +updateTimestamp(event): bool\n    }\n    class EventDatabase {\n        +insertEvent(eventData): bool\n        +updateEvent(eventID, data): bool\n        +fetchEvent(eventID): Event\n        +fetchDependencies(event): list\n    }\n\n    Middleware --> TimestampManager\n    Middleware --> EventDatabase\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":131.4494905058319,"y":125.21936368618596},"zoom":0.7458882331848145,"editorMode":"code"},"time":1717826873556,"type":"auto","id":"64e487a3-36f5-4d78-8930-148ed0220eec","name":"dead-rainbow"},{"state":{"code":"sequenceDiagram\n    participant Client\n    participant Middleware\n    participant TimestampManager\n    participant EventDatabase\n\n    Client->>Middleware: createEvent()\n    Middleware->>TimestampManager: assignTimestamp()\n    TimestampManager->>Middleware: returnTimestamp()\n    Middleware->>EventDatabase: insertEvent()\n    EventDatabase->>Middleware: confirmInsert()\n    Middleware->>Client: confirmEvent()\n\n    Client->>Middleware: updateEvent()\n    Middleware->>EventDatabase: fetchDependencies()\n    EventDatabase->>Middleware: returnDependencies()\n    Middleware->>Middleware: resolveDependencies()\n    Middleware->>EventDatabase: updateEvent()\n    EventDatabase->>Middleware: confirmUpdate()\n    Middleware->>Client: confirmUpdate()\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":131.4494905058319,"y":125.21936368618596},"zoom":0.7458882331848145,"editorMode":"code"},"time":1717826694511,"type":"auto","id":"97278ef7-619c-4710-bf54-405b7b05bb29","name":"billowy-needle"},{"state":{"code":"sequenceDiagram\n    participant Client\n    participant Middleware\n    participant TimestampManager\n    participant EventDatabase\n\n    Client->>Middleware: createEvent()\n    Middleware->>TimestampManager: assignTimestamp()\n    TimestampManager->>Middleware: returnTimestamp()\n    Middleware->>EventDatabase: insertEvent()\n    EventDatabase->>Middleware: confirmInsert()\n    Middleware->>Client: confirmEvent()\n\n    Client->>Middleware: updateEvent()\n    Middleware->>EventDatabase: fetchDependencies()\n    EventDatabase->>Middleware: returnDependencies()\n    Middleware->>Middleware: resolveDependencies()\n    Middleware->>EventDatabase: updateEvent()\n    EventDatabase->>Middleware: confirmUpdate()\n    Middleware->>Client: confirmUpdate()\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":130.44952940052,"y":127.21937427423482},"zoom":0.7458882331848145,"editorMode":"code"},"time":1717826633546,"type":"auto","id":"05acadf6-8778-4329-b280-4ab5855e981f","name":"wide-addition"},{"state":{"code":"+----------------------------------+\n|            Middleware            |\n+----------------------------------+\n| +createEvent(eventData): EventID |\n| +updateEvent(eventID, data): bool|\n| +resolveDependencies(event): bool|\n| +checkEventResolved(event): bool |\n+----------------------------------+\n                  |\n                  |\n                  v\n+----------------------------------+\n|          TimestampManager        |\n+----------------------------------+\n| +assignTimestamp(event): int     |\n| +updateTimestamp(event): bool    |\n+----------------------------------+\n                  |\n                  |\n                  v\n+----------------------------------+\n|           EventDatabase          |\n+----------------------------------+\n| +insertEvent(eventData): bool    |\n| +updateEvent(eventID, data): bool|\n| +fetchEvent(eventID): Event      |\n| +fetchDependencies(event): list  |\n+----------------------------------+\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":180.88090215505323,"y":66.28755939328947},"zoom":0.8696433305740356,"editorMode":"code"},"time":1717826573554,"type":"auto","id":"fc12dad1-f48f-403c-986f-017dad4329ed","name":"lively-florist"},{"state":{"code":"graph TD;\n    A[Start] --> B[Receive Event Creation/Update Request]\n    B --> C[Extract Event Details]\n    C --> D[Check for Existing Dependencies]\n    D -- Yes --> E[Retrieve Last Event Details]\n    E --> F[Check if Last Event is Resolved]\n    F -- No --> G[Resolve Last Event Dependencies]\n    G --> F\n    F -- Yes --> H[Embed Dependency Information]\n    D -- No --> H\n    H --> I[Insert/Update Event in MongoDB]\n    I --> J[Send Acknowledgment to Front End]\n    J --> K[End]\n\n    G --> L[Recursive Resolution of Dependencies]\n    L --> G\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":180.88090215505323,"y":66.28755939328947},"zoom":0.8696433177428277,"editorMode":"code"},"time":1717820260674,"type":"auto","id":"b86a9c93-b936-4747-94fb-885b4c3a91b3","name":"glamorous-activity"},{"state":{"code":"graph TD;\n    User -- Interacts with --> FrontEnd;\n    FrontEnd -- Sends Requests to --> Middleware;\n    Middleware -- Inserts/Queries Data --> MongoDB;\n    Middleware -- Periodic Gossip --> MongoDB;\n\n    subgraph User Actions\n        A[Open Create Event Form]\n        B[Fill Event Details]\n        C[Submit Event]\n        D[Request to View Events]\n    end\n\n    subgraph FrontEnd Actions\n        E[POST /api/events]\n        F[GET /api/my_events]\n    end\n\n    subgraph Middleware Actions\n        G[Process POST Request]\n        H[Insert Event into MongoDB]\n        I[Process GET Request]\n        J[Query Events from MongoDB]\n        K[Merge Membership Lists]\n        L[Update Membership List and Heartbeat Info in MongoDB]\n    end\n\n    subgraph MongoDB Actions\n        M[Store Event]\n        N[Return Acknowledgment]\n        O[Return Event List]\n    end\n\n    User -->|Open Create Event Form| A;\n    A --> B;\n    B --> C;\n    C -->|Submit Event| FrontEnd;\n    FrontEnd -->|POST /api/events| E;\n    E -->|Event Details| Middleware;\n    Middleware -->|Process POST Request| G;\n    G -->|Insert Event| H;\n    H -->|Store Event| MongoDB;\n    MongoDB -->|Acknowledge Event Created| N;\n    N -->|HTTP 201 Created| Middleware;\n    Middleware -->|HTTP 201 Created| FrontEnd;\n    FrontEnd -->|Event Created Confirmation| User;\n\n    User -->|Request to View Events| D;\n    D -->|GET /api/my_events| F;\n    F -->|Retrieve Events| Middleware;\n    Middleware -->|Process GET Request| I;\n    I -->|Query Events| J;\n    J -->|Find Events| MongoDB;\n    MongoDB -->|Return Event List| O;\n    O -->|Return Event List| Middleware;\n    Middleware -->|JSON Event List| FrontEnd;\n    FrontEnd -->|Display Events| User;\n\n    Middleware -->|Periodic Gossip| K;\n    K -->|Merge Membership Lists| L;\n    L -->|Update Membership Info| MongoDB;\n    MongoDB -->|Acknowledge Update| N;\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":119.31869701358931,"y":101.83952130416436},"zoom":0.9390200785408851,"editorMode":"code"},"time":1717820080670,"type":"auto","id":"f1e47a6a-4f32-4f37-931f-ae84917b60c0","name":"chilly-area"},{"state":{"code":"graph TD\n    U[User] --> |Create Event| FM[Flask Middleware]\n    U[User] --> |View Events| FM[Flask Middleware]\n    U[User] --> |Update Event| FM[Flask Middleware]\n    U[User] --> |Delete Event| FM[Flask Middleware]\n    U[User] --> |Login| FM[Flask Middleware]\n    U[User] --> |Logout| FM[Flask Middleware]\n    \n    A[Admin] --> |Manage Users| FM[Flask Middleware]\n    A[Admin] --> |View All Events| FM[Flask Middleware]\n    \n    S[System] --> |Run Gossip Protocol| FM[Flask Middleware]\n    S[System] --> |Manage Consistency| FM[Flask Middleware]\n    \n    FM --> |Create Event| DB[MongoDB]\n    FM --> |View Events| DB[MongoDB]\n    FM --> |Update Event| DB[MongoDB]\n    FM --> |Delete Event| DB[MongoDB]\n    FM --> |Login| DB[MongoDB]\n    FM --> |Logout| DB[MongoDB]\n    FM --> |Manage Users| DB[MongoDB]\n    FM --> |View All Events| DB[MongoDB]\n    FM --> |Run Gossip Protocol| DB[MongoDB]\n    FM --> |Manage Consistency| DB[MongoDB]\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":183.57260817936915,"y":122.90778532368343},"zoom":0.8696432709693909,"editorMode":"code"},"time":1717819960675,"type":"auto","id":"720ba991-94d1-43f6-be07-7c52c3828fb3","name":"square-death"},{"state":{"code":"@startuml\nactor User as U\nactor Admin as A\nactor System as S\n\nU --> (Create Event)\nU --> (View Events)\nU --> (Update Event)\nU --> (Delete Event)\nU --> (Login)\nU --> (Logout)\nA --> (Manage Users)\nA --> (View All Events)\nS --> (Gossip Protocol)\nS --> (Consistency Management)\n\n(Create Event) --> (Flask Middleware)\n(View Events) --> (Flask Middleware)\n(Update Event) --> (Flask Middleware)\n(Delete Event) --> (Flask Middleware)\n(Login) --> (Flask Middleware)\n(Logout) --> (Flask Middleware)\n(Manage Users) --> (Flask Middleware)\n(View All Events) --> (Flask Middleware)\n(Gossip Protocol) --> (MongoDB)\n(Consistency Management) --> (MongoDB)\n(Flask Middleware) --> (MongoDB)\n@enduml\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":183.57260817936915,"y":122.90778532368343},"zoom":0.8696432451594803,"editorMode":"config"},"time":1717819900678,"type":"auto","id":"10896aa0-6230-4c0f-a398-3e089e2dc325","name":"kind-insect"},{"state":{"code":"@startuml\nactor User as U\nactor Admin as A\nactor System as S\n\nU --> (Create Event)\nU --> (View Events)\nU --> (Update Event)\nU --> (Delete Event)\nU --> (Login)\nU --> (Logout)\nA --> (Manage Users)\nA --> (View All Events)\nS --> (Gossip Protocol)\nS --> (Consistency Management)\n\n(Create Event) --> (Flask Middleware)\n(View Events) --> (Flask Middleware)\n(Update Event) --> (Flask Middleware)\n(Delete Event) --> (Flask Middleware)\n(Login) --> (Flask Middleware)\n(Logout) --> (Flask Middleware)\n(Manage Users) --> (Flask Middleware)\n(View All Events) --> (Flask Middleware)\n(Gossip Protocol) --> (MongoDB)\n(Consistency Management) --> (MongoDB)\n(Flask Middleware) --> (MongoDB)\n@enduml\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":183.57260817936915,"y":122.90778532368343},"zoom":0.8696432451594803,"editorMode":"code"},"time":1717819840685,"type":"auto","id":"254177f1-e265-4ee6-a229-155cd7f1b945","name":"many-ice"},{"state":{"code":"---\ntitle: Calendar Application Use Case Diagram\n---\nusecaseDiagram\n    actor User as \"User\"\n    actor Admin as \"Admin\"\n    actor System as \"System\"\n\n    User --> (Create Event)\n    User --> (View Events)\n    User --> (Update Event)\n    User --> (Delete Event)\n    User --> (Login)\n    User --> (Logout)\n    Admin --> (Manage Users)\n    Admin --> (View All Events)\n    System --> (Gossip Protocol)\n    System --> (Consistency Management)\n\n    (Create Event) --> (Flask Middleware)\n    (View Events) --> (Flask Middleware)\n    (Update Event) --> (Flask Middleware)\n    (Delete Event) --> (Flask Middleware)\n    (Login) --> (Flask Middleware)\n    (Logout) --> (Flask Middleware)\n    (Manage Users) --> (Flask Middleware)\n    (View All Events) --> (Flask Middleware)\n    (Gossip Protocol) --> (MongoDB)\n    (Consistency Management) --> (MongoDB)\n    (Flask Middleware) --> (MongoDB)\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":true,"panZoom":true,"pan":{"x":183.57260817936915,"y":122.90778532368343},"zoom":0.8696432451594803,"editorMode":"code"},"time":1717819780666,"type":"auto","id":"de951730-1b48-4f89-88e5-1482674b85f0","name":"gorgeous-death"},{"state":{"code":"```mermaid\n---\ntitle: Calendar Application Use Case Diagram\n---\nusecaseDiagram\n    actor User as \"User\"\n    actor Admin as \"Admin\"\n    actor System as \"System\"\n\n    User --> (Create Event)\n    User --> (View Events)\n    User --> (Update Event)\n    User --> (Delete Event)\n    User --> (Login)\n    User --> (Logout)\n    Admin --> (Manage Users)\n    Admin --> (View All Events)\n    System --> (Gossip Protocol)\n    System --> (Consistency Management)\n\n    (Create Event) --> (Flask Middleware)\n    (View Events) --> (Flask Middleware)\n    (Update Event) --> (Flask Middleware)\n    (Delete Event) --> (Flask Middleware)\n    (Login) --> (Flask Middleware)\n    (Logout) --> (Flask Middleware)\n    (Manage Users) --> (Flask Middleware)\n    (View All Events) --> (Flask Middleware)\n    (Gossip Protocol) --> (MongoDB)\n    (Consistency Management) --> (MongoDB)\n    (Flask Middleware) --> (MongoDB)\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":183.57260817936915,"y":122.90778532368343},"zoom":0.8696432451594803,"editorMode":"code"},"time":1717819555509,"type":"auto","id":"e1569cad-00a9-4533-b665-4d12623f911a","name":"young-lunch"},{"state":{"code":"usecaseDiagram\n    actor User as U\n    actor Admin as A\n    actor System as S\n\n    U --> (Create Event)\n    U --> (View Events)\n    U --> (Update Event)\n    U --> (Delete Event)\n    U --> (Login)\n    U --> (Logout)\n    A --> (Manage Users)\n    A --> (View All Events)\n    S --> (Gossip Protocol)\n    S --> (Consistency Management)\n\n    (Create Event) --> (Flask Middleware)\n    (View Events) --> (Flask Middleware)\n    (Update Event) --> (Flask Middleware)\n    (Delete Event) --> (Flask Middleware)\n    (Login) --> (Flask Middleware)\n    (Logout) --> (Flask Middleware)\n    (Manage Users) --> (Flask Middleware)\n    (View All Events) --> (Flask Middleware)\n    (Gossip Protocol) --> (MongoDB)\n    (Consistency Management) --> (MongoDB)\n    (Flask Middleware) --> (MongoDB)\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":183.57260817936915,"y":122.90778532368343},"zoom":0.8696432451594803,"editorMode":"code"},"time":1717819489368,"type":"auto","id":"6142258b-386c-4684-9b8a-f32d8a04a03b","name":"gentle-daybreak"},{"state":{"code":"sequenceDiagram\n    participant User\n    participant FrontEnd\n    participant Middleware\n    participant MongoDB\n\n    User ->> FrontEnd: Open Create Event Form\n    User ->> FrontEnd: Fill Event Details\n    User ->> FrontEnd: Submit Event\n    FrontEnd ->> Middleware: POST /api/events (Event Details)\n    Middleware ->> MongoDB: insert_one(Event)\n    MongoDB -->> Middleware: Acknowledge Event Created\n    Middleware -->> FrontEnd: HTTP 201 Created\n    FrontEnd -->> User: Event Created Confirmation\n\n    User ->> FrontEnd: Request to View Events\n    FrontEnd ->> Middleware: GET /api/my_events\n    Middleware ->> MongoDB: find({ \"creator\": user_id })\n    MongoDB -->> Middleware: Return Event List\n    Middleware -->> FrontEnd: JSON Event List\n    FrontEnd -->> User: Display Events\n\n    note over Middleware: Gossip Protocol Begins\n    loop Periodic Gossip\n        Middleware ->> Middleware: Select random subset of nodes\n        Middleware ->> MongoDB: Get Membership List and Heartbeat Info\n        MongoDB -->> Middleware: Return Membership List and Heartbeat Info\n        Middleware ->> Middleware: Merge Membership Lists\n        Middleware ->> MongoDB: Update Membership List and Heartbeat Info\n        MongoDB -->> Middleware: Acknowledge Update\n    end\n    note over Middleware: Gossip Protocol Ends\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":183.57260817936915,"y":122.90778532368343},"zoom":0.8696432451594803,"editorMode":"code"},"time":1717819369509,"type":"auto","id":"dacd19e2-ba4d-4f16-a1b8-0467bec1718b","name":"long-actor"},{"state":{"code":"sequenceDiagram\n    participant User\n    participant FrontEnd\n    participant Middleware\n    participant MongoDB\n\n    User ->> FrontEnd: Open Create Event Form\n    User ->> FrontEnd: Fill Event Details\n    User ->> FrontEnd: Submit Event\n    FrontEnd ->> Middleware: POST /api/events (Event Details)\n    Middleware ->> MongoDB: insert_one(Event)\n    MongoDB -->> Middleware: Acknowledge Event Created\n    Middleware -->> FrontEnd: HTTP 201 Created\n    FrontEnd -->> User: Event Created Confirmation\n\n    User ->> FrontEnd: Request to View Events\n    FrontEnd ->> Middleware: GET /api/my_events\n    Middleware ->> MongoDB: find({ \"creator\": user_id })\n    MongoDB -->> Middleware: Return Event List\n    Middleware -->> FrontEnd: JSON Event List\n    FrontEnd -->> User: Display Events\n\n    note over Middleware: Gossip Protocol Begins\n    loop Periodic Gossip\n        Middleware ->> Middleware: Select random subset of nodes\n        Middleware ->> MongoDB: Get Membership List and Heartbeat Info\n        MongoDB -->> Middleware: Return Membership List and Heartbeat Info\n        Middleware ->> Middleware: Merge Membership Lists\n        Middleware ->> MongoDB: Update Membership List and Heartbeat Info\n        MongoDB -->> Middleware: Acknowledge Update\n    end\n    note over Middleware: Gossip Protocol Ends\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":191.43569108386157,"y":141.5328956332292},"zoom":0.8053921461105347,"editorMode":"code"},"time":1717819309376,"type":"auto","id":"0e7561f0-c39a-45e9-b060-660604b29ee3","name":"alive-mechanic"},{"state":{"code":"graph TD;\n    subgraph User_Device\n        browser[Browser]\n    end\n\n    subgraph Front_End\n        A[HTML/JavaScript]\n        B[Event Form]\n        C[Event List]\n    end\n\n    subgraph Middleware\n        D[Flask Application]\n        E[EventController]\n        F[UserController]\n        G[Letting-It-Be Protocol]\n        H[Gossip Protocol]\n        I[Membership List]\n        J[Reputation Scores]\n    end\n\n    subgraph Database\n        K[MongoDB]\n        L[Events Collection]\n        M[Users Collection]\n        N[Dependencies Collection]\n    end\n\n    browser --> A\n    A --> B\n    A --> C\n    B --> D\n    C --> D\n\n    D --> E\n    D --> F\n    E --> G\n    F --> G\n    E --> H\n    H --> I\n    H --> J\n\n    E --> L\n    F --> M\n    G --> N\n    H --> N\n    I --> K\n    J --> K\n    K --> L\n    K --> M\n    K --> N\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":191.43569108386157,"y":141.5328956332292},"zoom":0.8053921450082768,"editorMode":"code"},"time":1717819249507,"type":"auto","id":"822d82d6-8885-467c-8085-2929db58e314","name":"aloof-traffic"},{"state":{"code":"graph TD;\n    subgraph User_Device\n        browser[Browser]\n    end\n\n    subgraph Front_End\n        A[HTML/JavaScript]\n        B[Event Form]\n        C[Event List]\n    end\n\n    subgraph Middleware\n        D[Flask Application]\n        E[EventController]\n        F[UserController]\n        G[Letting-It-Be Protocol]\n        H[Gossip Protocol]\n        I[Membership List]\n        J[Reputation Scores]\n    end\n\n    subgraph Database\n        K[MongoDB]\n        L[Events Collection]\n        M[Users Collection]\n        N[Dependencies Collection]\n    end\n\n    browser --> A\n    A --> B\n    A --> C\n    B --> D\n    C --> D\n\n    D --> E\n    D --> F\n    E --> G\n    F --> G\n    E --> H\n    H --> I\n    H --> J\n\n    E --> L\n    F --> M\n    G --> N\n    H --> N\n    I --> K\n    J --> K\n    K --> L\n    K --> M\n    K --> N\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":199.89994675207535,"y":160.11182212065626},"zoom":0.7458880543708801,"editorMode":"code"},"time":1717819189372,"type":"auto","id":"033358fe-9004-404f-959f-0dd6d49f3124","name":"absurd-kite"},{"state":{"code":"graph TD;\n    browser[Browser]\n    A[HTML/JavaScript]\n    B[Event Form]\n    C[Event List]\n    D[Flask Application]\n    E[EventController]\n    F[UserController]\n    G[Letting-It-Be Protocol]\n    H[Gossip Protocol]\n    I[Membership List]\n    J[Reputation Scores]\n    K[MongoDB]\n    L[Events Collection]\n    M[Users Collection]\n    N[Dependencies Collection]\n\n    browser --> A\n    A --> B\n    A --> C\n    B --> D\n    C --> D\n\n    D --> E\n    D --> F\n    E --> G\n    F --> G\n    E --> H\n    H --> I\n    H --> J\n\n    E --> L\n    F --> M\n    G --> N\n    H --> N\n    I --> K\n    J --> K\n    K --> L\n    K --> M\n    K --> N\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":199.89994675207535,"y":160.11182212065626},"zoom":0.7458880543708801,"editorMode":"code"},"time":1717819129378,"type":"auto","id":"dd4b9183-1f4f-4068-9612-d5e55ff61200","name":"uptight-zebra"},{"state":{"code":"graph TD;\n    subgraph User_Device\n        browser[Browser]\n    end\n\n    subgraph Front_End\n        A[HTML/JavaScript]\n        B[Event Form]\n        C[Event List]\n    end\n\n    subgraph Middleware\n        D[Flask Application]\n        E[EventController]\n        F[UserController]\n        G[Letting-It-Be Protocol]\n        H[Gossip Protocol]\n        I[Membership List]\n        J[Reputation Scores]\n    end\n\n    subgraph Database\n        K[MongoDB]\n        L[Events Collection]\n        M[Users Collection]\n        N[Dependencies Collection]\n    end\n\n    browser --> A\n    A --> B\n    A --> C\n    B --> D\n    C --> D\n\n    D --> E\n    D --> F\n    E --> G\n    F --> G\n    E --> H\n    H --> I\n    H --> J\n\n    E --> L\n    F --> M\n    G --> N\n    H --> N\n    I --> K\n    J --> K\n    K --> L\n    K --> M\n    K --> N\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":110.7195223247709,"y":322.14090018285157},"zoom":0.8200750377618562,"editorMode":"code"},"time":1717819069371,"type":"auto","id":"2518cb6b-44be-489a-9daf-deab46ccd7f1","name":"dirty-knife"},{"state":{"code":"graph TD;\n    subgraph Front_End\n        A[HTML/JavaScript]\n        A --> B[Event Form]\n        A --> C[Event List]\n    end\n\n    subgraph Middleware\n        D[Flask Application]\n        D --> E[EventController]\n        D --> F[UserController]\n        E --> G[Letting-It-Be Protocol]\n        F --> G\n    end\n\n    subgraph Database\n        H[MongoDB]\n        H --> I[Events Collection]\n        H --> J[Users Collection]\n        H --> K[Dependencies Collection]\n    end\n\n    A --> D\n    E --> I\n    F --> J\n    G --> K\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":8.199702837123908,"y":288.1910467606608},"zoom":1.0000002573837232,"editorMode":"code"},"time":1717819009370,"type":"auto","id":"f70505df-5372-4fc3-b4dd-b418c02fbc4f","name":"disgusting-apartment"},{"state":{"code":"graph TD;\n    subgraph Front_End\n        A[HTML/JavaScript]\n        A --> B[Event Form]\n        A --> C[Event List]\n    end\n\n    subgraph Middleware\n        D[Flask Application]\n        D --> E[EventController]\n        D --> F[UserController]\n        E --> G[Letting-It-Be Protocol]\n        F --> G\n    end\n\n    subgraph Database\n        H[MongoDB]\n        H --> I[Events Collection]\n        H --> J[Users Collection]\n        H --> K[Dependencies Collection]\n    end\n\n    A --> D\n    E --> I\n    F --> J\n    G --> K\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"panZoom":true,"pan":{"x":8.199702837123908,"y":288.1910467606608},"zoom":1.0000002573837232,"editorMode":"config"},"time":1717818949368,"type":"auto","id":"9ca0ea79-f105-4d21-8668-99b9d3f5770a","name":"long-london"},{"state":{"code":"graph TD;\n    subgraph User_Device\n        browser[Browser]\n    end\n\n    subgraph Server\n        web_server[Flask Middleware]\n        db_server[MongoDB Database]\n    end\n\n    browser --> web_server\n    web_server --> db_server\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1717818889371,"type":"auto","id":"e66fd00c-02ab-476c-af5c-df5cdb3ae6d3","name":"deafening-evening"},{"state":{"code":"sequenceDiagram\n    participant User\n    participant FrontEnd\n    participant Middleware\n    participant MongoDB\n\n    User ->> FrontEnd: Open Create Event Form\n    User ->> FrontEnd: Fill Event Details\n    User ->> FrontEnd: Submit Event\n    FrontEnd ->> Middleware: POST /api/events (Event Details)\n    Middleware ->> MongoDB: insert_one(Event)\n    MongoDB -->> Middleware: Acknowledge Event Created\n    Middleware -->> FrontEnd: HTTP 201 Created\n    FrontEnd -->> User: Event Created Confirmation\n\n    User ->> FrontEnd: Request to View Events\n    FrontEnd ->> Middleware: GET /api/my_events\n    Middleware ->> MongoDB: find({ \"creator\": user_id })\n    MongoDB -->> Middleware: Return Event List\n    Middleware -->> FrontEnd: JSON Event List\n    FrontEnd -->> User: Display Events\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1717818769509,"type":"auto","id":"c187efbc-c336-476d-ab92-57e13bc2847f","name":"salty-juice"}]